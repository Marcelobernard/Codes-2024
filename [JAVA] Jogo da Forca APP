package estacio.jdf;

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.stage.Stage;
import javafx.geometry.Pos;


public class jdf extends Application {
    private boolean respostaCorreta = false;
    private String palavra = "carro"; // Palavra que será mostrada
    private Label palavraLabel;

    public void start(Stage primaryStage) {
        BorderPane root = new BorderPane();

        ImageView imageView = new ImageView();

        // Adiciona a imagem à parte superior direita
        try {
            Image imagem = new Image("90p.png");
            imageView.setImage(imagem);
            imageView.setFitWidth(300);
            imageView.setFitHeight(400);
        } catch (IllegalArgumentException e) {
            System.err.println("Erro ao carregar a imagem: " + e.getMessage());
        }
        HBox caixaSuperiorDireita = new HBox(imageView);
        root.setTop(caixaSuperiorDireita);
        BorderPane.setAlignment(caixaSuperiorDireita, Pos.TOP_RIGHT); // Alinha o HBox ao canto superior direito
        BorderPane.setMargin(caixaSuperiorDireita, new Insets(10)); // Adiciona margem para espaçamento

        GridPane painelBotoes = new GridPane();
        painelBotoes.setPadding(new Insets(10));
        painelBotoes.setHgap(5);
        painelBotoes.setVgap(5);

        int col = 0;
        int row = 0;
        for (char c = 'A'; c <= 'Z'; c++) {
            Button botao = new Button(String.valueOf(c));
            botao.setPrefSize(40, 40);
            botao.setOnAction(e -> {
                if (verificarResposta()) {
                    botao.setStyle("-fx-background-color: green;");
                    botao.setDisable(true);
                    String letrasCorretas = palavraLabel.getText().replaceAll("\\s", ""); // Obtém letras corretas do texto atual
                    palavraLabel.setText(getPalavraEscondida(letrasCorretas)); // Atualiza a palavra exibida
                } else {
                    botao.setStyle("-fx-background-color: red;");
                }
            });
            painelBotoes.add(botao, col, row);
            col++;
            if (col > 6) {
                col = 0;
                row++;
            }
        }

        // Centraliza os botões na parte inferior
        HBox caixaBotoesInferior = new HBox(painelBotoes);
        caixaBotoesInferior.setAlignment(Pos.CENTER); // Centraliza os botões horizontalmente
        root.setBottom(caixaBotoesInferior);

        // Adicione a palavra ao lado inferior direito
        palavraLabel = new Label(getPalavraEscondida(""));
        palavraLabel.setStyle("-fx-font-size: 24px;"); // Define o tamanho da fonte como 24 pixels
        HBox caixaInferiorEsquerda = new HBox(palavraLabel);
        root.setLeft(caixaInferiorEsquerda);
        BorderPane.setMargin(caixaInferiorEsquerda, new Insets(0, 10, 10, 0));

        Scene cena = new Scene(root, 800, 600);

        primaryStage.setScene(cena);
        primaryStage.setTitle("Jogo da Forca");
        primaryStage.setResizable(false);

        primaryStage.show();
    }

    private boolean verificarResposta() {
        respostaCorreta = !respostaCorreta;
        return respostaCorreta;
    }

    private String getPalavraEscondida(String letrasCorretas) {
        StringBuilder palavraEscondida = new StringBuilder();
        for (int i = 0; i < palavra.length(); i++) {
            char letra = palavra.charAt(i);
            if (letrasCorretas.contains(String.valueOf(letra))) {
                palavraEscondida.append(letra).append(" ");
            } else {
                palavraEscondida.append("_ ");
            }
        }
        return palavraEscondida.toString();
    }

    public static void main(String[] args) {
        launch(args);
    }
}
